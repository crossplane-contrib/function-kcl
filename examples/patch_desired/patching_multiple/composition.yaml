apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: kcl-function
spec:
  compositeTypeRef:
    apiVersion: nopexample.org/v1
    kind: XSubnetwork
  mode: Pipeline
  pipeline:
    - step: generate desired resources
      functionRef:
        name: kcl-function
      input:
        apiVersion: krm.kcl.dev/v1alpha1
        kind: KCLInput
        spec:
          source: |
            items = [{
                apiVersion: "v1"
                kind: "XR"
                metadata.annotations: {
                    "krm.kcl.dev/composition-resource-name" = "bucket1"
                }
                spec.forProvider.network: "some-network"
            }, {
                apiVersion: "v1"
                kind: "XR"
                metadata.name = "bucket2"
                spec.forProvider.network: "some-network"
            }]
    - step: patch desired resources
      functionRef:
        name: kcl-function
      input:
        apiVersion: krm.kcl.dev/v1alpha1
        kind: KCLInput
        spec:
          target: PatchDesired
          source: |
            items = [{
                metadata.name = "bucket1"
                spec.forProvider.network: "some-override-network1"
            }, {
                metadata.name = "bucket2"
                spec.forProvider.network: "some-override-network2"
            }]
